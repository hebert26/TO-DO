{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-error-handler.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/new-todo/new-todo.component.html","webpack:///./src/app/new-todo/new-todo.component.ts","webpack:///./src/app/shared/todo.service.ts","webpack:///./src/app/store/todo.actions.ts","webpack:///./src/app/store/todo.filter.ts","webpack:///./src/app/store/todo.state.ts","webpack:///./src/app/todo-list/todo-list-component.ts","webpack:///./src/app/todo-list/todo-list.component.html","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\r\\n  background-color: #EEEEEE;\\r\\n}\\r\\n\\r\\n.todolist {\\r\\n  background-color: #FFF;\\r\\n  padding: 20px 20px 10px 20px;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n.todolist h1 {\\r\\n  margin: 0;\\r\\n  padding-bottom: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  border-radius: 0;\\r\\n}\\r\\n\\r\\nli.ui-state-default {\\r\\n  background: #fff;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nli.ui-state-default:last-child {\\r\\n  border-bottom: none;\\r\\n}\\r\\n\\r\\n.todo-footer {\\r\\n  background-color: #F4FCE8;\\r\\n  margin: 0 -20px -10px -20px;\\r\\n  padding: 10px 20px;\\r\\n}\\r\\n\\r\\n#done-items li {\\r\\n  padding: 10px 0;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n  text-decoration: line-through;\\r\\n}\\r\\n\\r\\n#done-items li:last-child {\\r\\n  border-bottom: none;\\r\\n}\\r\\n\\r\\n#checkAll {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  margin: 65px auto 0;\\r\\n  color: #0e0a0a6e;\\r\\n  font-size: 10px;\\r\\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.info a {\\r\\n  color: #242121;\\r\\n  text-decoration: none;\\r\\n  font-weight: 400;\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"todoapp\\\">\\n  <header class=\\\"header\\\">\\n    <h1>To Do List</h1>\\n    <app-new-todo></app-new-todo>\\n  </header>\\n  <router-outlet></router-outlet>\\n  <app-footer></app-footer>\\n</section>\\n<footer class=\\\"info\\\">\\n  <p>Writen by\\n    <a href=\\\"https://twitter.com/Heberth26\\\">Hebert Godoy</a>\\n  </p>\\n  <p>Tecnologies used\\n    <a href=\\\"https://angular.io/\\\">Angular 6</a>, \\n    <a href=\\\"https://github.com/ngxs/store\\\">@ngxs/store</a>, \\n    <a href=\\\"https://docs.microsoft.com/en-us/azure/service-fabric/\\\">Azure service fabric</a>  \\n  </p>\\n</footer>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n  ngOnInit() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { environment } from '../environments/environment';\nimport { NewTodoComponent } from './new-todo/new-todo.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FooterComponent } from './footer/footer.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TodoListComponent } from './todo-list/todo-list-component';\nimport { TodoComponent } from './todo/todo.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TodoState } from './store/todo.state';\nimport { TodoService } from './shared/todo.service';\nimport { HttpErrorHandler } from './http-error-handler.service';\nimport { MessageService } from './message.service';\nlet devtools = [];\n\nconst routes: Routes = [\n  // basic routes\n  { path: '', component: TodoListComponent, pathMatch: 'full' },\n  { path: ':filter', component: TodoListComponent }\n];\n\n\nif (!environment.production) {\n  devtools = [\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot()\n  ];\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewTodoComponent,\n    TodoListComponent,\n    FooterComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    NgxsModule.forRoot([\n      TodoState\n    ]),\n    devtools,\n    NgbModule.forRoot()\n  ],\n  providers: [\n    TodoService,\n    MessageService,\n    HttpErrorHandler\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n","module.exports = \"<footer id=\\\"footer\\\" class=\\\"footer\\\" *ngIf=\\\"showFooter\\\">\\r\\n  <span id=\\\"todo-count\\\" class=\\\"todo-count\\\">{{ countTodos }} items left</span>\\r\\n  <ul id=\\\"filters\\\" class=\\\"filters\\\">\\r\\n    <li>\\r\\n      <a [routerLink]=\\\"['/']\\\" [class.selected]=\\\"(currentFilter$ | async) == 'SHOW_ALL'\\\">\\r\\n        All\\r\\n      </a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a [routerLink]=\\\"['/','active']\\\" [class.selected]=\\\"(currentFilter$ | async) == 'SHOW_ACTIVE'\\\">\\r\\n        Active\\r\\n      </a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a [routerLink]=\\\"['/','completed']\\\" [class.selected]=\\\"(currentFilter$ | async) == 'SHOW_COMPLETED'\\\">\\r\\n        Completed\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <button id=\\\"clear-completed\\\" class=\\\"clear-completed\\\" (click)=\\\"clearCompleted()\\\">Clear completed</button>\\r\\n</footer>\\r\\n\"","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Select, Store } from \"@ngxs/store\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ClearCompleted, CompletedAll, TodoFromServer } from \"../store/todo.actions\";\r\nimport { TodoState } from \"../store/todo.state\";\r\nimport { TodoService } from \"../shared/todo.service\";\r\nimport { Todo } from \"../model/models\";\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\nexport class FooterComponent implements OnInit, OnDestroy {\r\n\r\n    countTodos: number;\r\n    showFooter: boolean;\r\n    @Select(TodoState.getTodos) todos$;\r\n    @Select(TodoState.getFilter) currentFilter$;\r\n    subs: Subscription;\r\n\r\n    constructor(private store: Store, private todoService: TodoService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subs = this.todos$.subscribe(todos => {\r\n            this.countTodos = todos.filter(t => !t.completed).length;\r\n            this.showFooter = todos.length > 0;\r\n        });\r\n        this.store.dispatch(new TodoFromServer());\r\n\r\n    }\r\n\r\n    clearCompleted() {\r\n        this.store.dispatch(new ClearCompleted());\r\n    }\r\n\r\n    completedAll() {\r\n        this.store.dispatch(new CompletedAll());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subs.unsubscribe();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n    <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n    constructor(private messageService: MessageService) { }\r\n\r\n    /** Create curried handleError function that already knows the service name */\r\n    createHandleError = (serviceName = '') => <T>\r\n        (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n    /**\r\n     * Returns a function that handles Http operation failures.\r\n     * This error handler lets the app continue to run as if no error occurred.\r\n     * @param serviceName = name of the data service that attempted the operation\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    handleError<T>(serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n        return (error: HttpErrorResponse): Observable<T> => {\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            const message = (error.error instanceof ErrorEvent) ?\r\n                error.error.message :\r\n                `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n            // Let the app keep running by returning a safe result.\r\n            return of(result);\r\n        };\r\n\r\n    }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n    messages: string[] = [];\r\n\r\n    constructor() {\r\n\r\n\r\n    }\r\n    add(message: string) {\r\n        this.messages.push(message);\r\n    }\r\n\r\n    clear() {\r\n        this.messages = [];\r\n    }\r\n}\r\n\r\n","module.exports = \"<input id=\\\"new-todo\\\" class=\\\"new-todo\\\" type=\\\"text\\\" autofocus (keyup.enter)=\\\"saveTodo()\\\" placeholder=\\\"Add new task...\\\" [formControl]=\\\"textField\\\"\\r\\n/>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Store } from \"@ngxs/store\";\r\nimport { AddTodo, TodoFromServer } from \"../store/todo.actions\";\r\n@Component({\r\n    selector: 'app-new-todo',\r\n    templateUrl: './new-todo.component.html'\r\n})\r\nexport class NewTodoComponent implements OnInit {\r\n\r\n    textField: FormControl;\r\n\r\n    constructor(private store: Store) {\r\n        this.textField = new FormControl('', [Validators.required]);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    saveTodo() {\r\n        if (this.textField.valid) {\r\n            const text: string = this.textField.value;\r\n            this.store.dispatch(new AddTodo(text.trim()))\r\n                .subscribe(() => {\r\n                    this.store.dispatch(new TodoFromServer())\r\n                });\r\n            this.textField.setValue('', { emitEvent: false });\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Todo } from \"../model/models\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { HandleError, HttpErrorHandler } from \"../http-error-handler.service\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n//Accept: application/json;odata=verbose;\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Accept': 'application/json;odata=verbose',\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TodoService {\r\n  private handleError: HandleError;\r\n  private apiUrl: string = \"api/todos/\";\r\n\r\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) {\r\n    this.handleError = httpErrorHandler.createHandleError('TodoService');\r\n  }\r\n\r\n  /** get todos */\r\n  getTodos(): Observable<Todo[]> {\r\n    return this.http.get<Todo[]>(`${this.apiUrl}all`)\r\n      .pipe(\r\n        catchError(this.handleError('getTodos', []))\r\n      );\r\n  }\r\n  /** add a new todo */\r\n  addTodo(todo: Todo): Observable<Todo> {\r\n    return this.http.post<Todo>(`${this.apiUrl}add`, todo, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('addTodo', todo))\r\n      );\r\n  }\r\n  /** update a new todo */\r\n  UpdateTodo(todo: Todo): Observable<Todo> {\r\n    return this.http.put<Todo>(`${this.apiUrl}update`, todo, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('UpdateTodo', todo))\r\n      );\r\n  }\r\n\r\n  /** toggle a new todo */\r\n  toggle(todo: Todo): Observable<Todo> {\r\n    return this.http.put<Todo>(`${this.apiUrl}toggle`, todo, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('toggle', null))\r\n      );\r\n  }\r\n  /** remove a new todo */\r\n  remove(todo: Todo): Observable<Todo> {\r\n    return this.http.put<Todo>(`${this.apiUrl}remove`, todo, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('remove', null))\r\n      );\r\n  }\r\n}\r\n","import { Todo } from \"../model/models\";\r\n\r\nexport class AddTodo {\r\n    static readonly type = '[TODO] add';\r\n\r\n    constructor(public payload: string) {\r\n    }\r\n}\r\n\r\nexport class PopulateTodos {\r\n    static readonly type = '[TODO] populate';\r\n\r\n    constructor(public payload: Todo[]) {\r\n    }\r\n}\r\n\r\nexport class DeleteTodo {\r\n    static readonly type = '[TODO] delete';\r\n\r\n    constructor(public payload: number) {\r\n    }\r\n}\r\n\r\nexport class ToggleTodo {\r\n    static readonly type = '[TODO] toggle';\r\n\r\n    constructor(public payload: number) {\r\n    }\r\n}\r\n\r\nexport class UpdateTodo {\r\n    static readonly type = '[TODO] update';\r\n\r\n    constructor(public payload: { id: number, text: string }) {\r\n    }\r\n}\r\n\r\nexport class ClearCompleted {\r\n    static readonly type = '[TODO] clear completed';\r\n}\r\n\r\nexport class CompletedAll {\r\n    static readonly type = '[TODO] complete all';\r\n}\r\n\r\nexport class TodoFromServer {\r\n    static readonly type = '[TODO] From server';\r\n}\r\n","export class SetFilter {\r\n    static readonly type = '[SET] filter';\r\n\r\n    constructor(public payload: string) {\r\n    }\r\n}\r\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport { Todo } from '../model/models';\r\nimport { AddTodo, PopulateTodos, ToggleTodo, DeleteTodo, UpdateTodo, ClearCompleted, CompletedAll, TodoFromServer } from './todo.actions';\r\nimport { SetFilter } from './todo.filter';\r\nimport { TodoService } from '../shared/todo.service';\r\n\r\nexport class TodoStateModel {\r\n    filter: string;\r\n    todos: Todo[];\r\n}\r\n\r\n@State<TodoStateModel>({\r\n    name: 'todos',\r\n    defaults: {\r\n        filter: 'SHOW_ALL',\r\n        todos: []\r\n    }\r\n})\r\n\r\nexport class TodoState {\r\n\r\n    constructor(public todoService: TodoService) {\r\n    }\r\n\r\n    @Selector()\r\n    static getTodos(state: TodoStateModel) {\r\n        return state.todos;\r\n    }\r\n\r\n    @Selector()\r\n    static getFilter(state: TodoStateModel) {\r\n        return state.filter;\r\n    }\r\n\r\n    @Selector()\r\n    static getVisibleTodos(state: TodoStateModel) {\r\n        if (state.filter === 'SHOW_ALL') {\r\n            return state.todos;\r\n        } else if (state.filter === 'SHOW_COMPLETED') {\r\n            return state.todos.filter(t => t.completed);\r\n        } else if (state.filter === 'SHOW_ACTIVE') {\r\n            return state.todos.filter(t => !t.completed);\r\n        }\r\n    }\r\n\r\n    @Selector()\r\n    static getStateCompleted(state: TodoStateModel) {\r\n        return state.todos.every(todo => todo.completed);\r\n    }\r\n\r\n    @Action(AddTodo)\r\n    add({ getState, patchState }: StateContext<TodoStateModel>, { payload }: AddTodo) {\r\n        const todo: any = { text: payload, completed: false };\r\n        this.todoService.addTodo(todo)\r\n            .subscribe((result: any) => {\r\n                patchState({\r\n                    todos: [...getState().todos, { id: result, text: todo.text, completed: todo.completed }]\r\n                });\r\n            }, error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    @Action(TodoFromServer)\r\n    addTodosFromServer({ getState, patchState }: StateContext<TodoStateModel>, { }: TodoFromServer) {\r\n        this.todoService.getTodos()\r\n            .subscribe((result: Todo[]) => {\r\n                patchState({\r\n                    todos: result\r\n                });\r\n\r\n            }, error => {\r\n                //TODO:HG Add logic to display error to users\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    @Action(PopulateTodos)\r\n    populate({ patchState }: StateContext<TodoStateModel>, { payload }: PopulateTodos) {\r\n        patchState({\r\n            todos: payload\r\n        });\r\n    }\r\n\r\n    @Action(ToggleTodo)\r\n    toggle({ getState, patchState }: StateContext<TodoStateModel>, { payload }: ToggleTodo) {\r\n        let newTodo: any = getState().todos.filter(td => td.id == payload);\r\n        let td: Todo = {\r\n            completed: !newTodo[0].completed,\r\n            id: newTodo[0].id,\r\n            text: newTodo[0].text\r\n        }\r\n        this.todoService.toggle(td)\r\n            .subscribe((result: any) => {\r\n                patchState({\r\n                    todos: getState().todos.map(td => {\r\n                        if (td.id === payload) {\r\n                            td.completed = !td.completed;\r\n                        }\r\n                        return td;\r\n                    })\r\n                });\r\n            }, error => {\r\n                //TODO:HG Add logic to display error to users\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    @Action(DeleteTodo)\r\n    delete({ getState, patchState }: StateContext<TodoStateModel>, { payload }: DeleteTodo) {\r\n        let newTodo: any = getState().todos.filter(td => td.id == payload);\r\n\r\n        let td: Todo = {\r\n            completed: newTodo[0].completed,\r\n            id: newTodo[0].id,\r\n            text: newTodo[0].text\r\n        }\r\n        this.todoService.remove(td)\r\n            .subscribe((result: any) => {\r\n                patchState({\r\n                    todos: getState().todos.filter(td => td.id !== payload)\r\n                });\r\n            }, error => {\r\n                //TODO:HG Add logic to display error to users\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    @Action(UpdateTodo)\r\n    update({ getState, patchState }: StateContext<TodoStateModel>, { payload }: UpdateTodo) {\r\n        let newTodo: any = getState().todos.filter(td => td.id == payload.id);\r\n        let td: Todo = {\r\n            completed: newTodo[0].completed,\r\n            id: newTodo[0].id,\r\n            text: payload.text\r\n        }\r\n        this.todoService.UpdateTodo(td)\r\n            .subscribe((id: any) => {\r\n                patchState({\r\n                    todos: getState().todos.map(td => {\r\n                        if (td.id === newTodo[0].id) {\r\n                            td.text = payload.text;\r\n                        }\r\n                        return td;\r\n                    })\r\n                });\r\n            }, error => {\r\n                //TODO:HG Add logic to display error to users\r\n                console.log(error);\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    @Action(ClearCompleted)\r\n    clear({ getState, patchState }: StateContext<TodoStateModel>) {\r\n        patchState({\r\n            todos: getState().todos.filter(td => !td.completed)\r\n        });\r\n    }\r\n\r\n    @Action(CompletedAll)\r\n    complete({ getState, patchState }: StateContext<TodoStateModel>) {\r\n        patchState({\r\n            todos: getState().todos.map(td => {\r\n                td.completed = true;\r\n                return td;\r\n            })\r\n        });\r\n    }\r\n\r\n    @Action(SetFilter)\r\n    filter({ patchState }: StateContext<TodoStateModel>, { payload }: SetFilter) {\r\n        patchState({\r\n            filter: payload\r\n        });\r\n    }\r\n} ","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';;\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CompletedAll } from '../store/todo.actions';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TodoState } from '../store/todo.state';\r\nimport { SetFilter } from '../store/todo.filter';\r\n\r\n\r\n@Component({\r\n    selector: 'app-todo-list',\r\n    templateUrl: './todo-list.component.html'\r\n})\r\nexport class TodoListComponent implements OnInit {\r\n\r\n    checkFieldForm: FormControl;\r\n    @Select(TodoState.getVisibleTodos) todos$;\r\n    @Select(TodoState.getStateCompleted) stateCompleted$;\r\n\r\n    constructor(private store: Store,\r\n        private route: ActivatedRoute) {\r\n        this.checkFieldForm = new FormControl();\r\n        this.readParams();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.stateCompleted$.subscribe(status => {\r\n            this.checkFieldForm.setValue(status);\r\n        });\r\n    }\r\n\r\n    toggleAll() {\r\n        this.store.dispatch(new CompletedAll());\r\n    }\r\n\r\n    private setFilter(filter: string) {\r\n        switch (filter) {\r\n            case 'active': {\r\n                this.store.dispatch(new SetFilter('SHOW_ACTIVE'));\r\n                break;\r\n            }\r\n            case 'completed': {\r\n                this.store.dispatch(new SetFilter('SHOW_COMPLETED'));\r\n                break;\r\n            }\r\n            default: {\r\n                this.store.dispatch(new SetFilter('SHOW_ALL'));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private readParams() {\r\n        this.route.params\r\n            .subscribe(params => {\r\n                this.setFilter(params.filter);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<section id=\\\"main\\\" class=\\\"main\\\">\\r\\n  <div class=\\\"toogle-view\\\" *ngIf=\\\"(todos$ | async).length > 0\\\">\\r\\n    <input id=\\\"toggle-all\\\" class=\\\"toggle-all\\\" type=\\\"checkbox\\\" [formControl]=\\\"checkFieldForm\\\">\\r\\n    <label (click)=\\\"toggleAll()\\\">Mark all as complete</label>\\r\\n  </div>\\r\\n  <ul id=\\\"todo-list\\\" class=\\\"todo-list\\\">\\r\\n    <app-todo [todo]=\\\"todo\\\" *ngFor=\\\"let todo of (todos$ | async)\\\"></app-todo>\\r\\n  </ul>\\r\\n</section>\\r\\n\"","module.exports = \"<li [class.completed]=\\\"todo.completed\\\" [class.editing]=\\\"editing\\\">\\r\\n  <div class=\\\"view\\\">\\r\\n    <input class=\\\"toggle\\\" type=\\\"checkbox\\\" [formControl]=\\\"checkField\\\" />\\r\\n    <label (dblclick)=\\\"activeEditMode()\\\" title=\\\"Double-click to edit a task\\\"> {{ todo.text }} </label>\\r\\n    <button class=\\\"destroy\\\" (click)=\\\"deleteTodo()\\\" title=\\\"Remove task\\\"></button>\\r\\n  </div>\\r\\n  <input class=\\\"edit\\\" type=\\\"text\\\" #textInput (keyup.enter)=\\\"updateText()\\\" (blur)=\\\"updateText()\\\" [formControl]=\\\"textField\\\" [hidden]=\\\"editing\\\"\\r\\n  />\\r\\n</li>\\r\\n\"","import { Component, Input, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\nimport { Todo } from \"../model/models\";\r\nimport { Store } from \"@ngxs/store\";\r\nimport { ToggleTodo, UpdateTodo, DeleteTodo, TodoFromServer } from \"../store/todo.actions\";\r\n\r\n@Component({\r\n    selector: 'app-todo',\r\n    templateUrl: './todo.component.html'\r\n})\r\nexport class TodoComponent implements OnInit {\r\n\r\n    @Input() todo: Todo;\r\n    @ViewChild('textInput') textInput: ElementRef;\r\n    textField: FormControl;\r\n    checkField: FormControl;\r\n    editing: boolean;\r\n\r\n    constructor(private store: Store) {\r\n        this.textField = new FormControl('', [Validators.required]);\r\n        this.checkField = new FormControl(false);\r\n        this.checkField.valueChanges\r\n            .subscribe(state => {\r\n                this.store.dispatch(new ToggleTodo(this.todo.id));\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.textField.setValue(this.todo.text);\r\n        this.checkField.setValue(this.todo.completed, { emitEvent: false });\r\n    }\r\n\r\n    updateText() {\r\n        if (this.textField.valid && this.editing) {\r\n            const id = this.todo.id;\r\n            const newText: string = this.textField.value;\r\n            this.store.dispatch(new UpdateTodo({ id: id, text: newText.trim() })).subscribe(() => {\r\n                this.store.dispatch(new TodoFromServer()).subscribe(() => {\r\n                    this.editing = !this.editing;\r\n                })\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    activeEditMode() {\r\n        this.editing = true;\r\n        setTimeout(() => {\r\n            this.textInput.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    deleteTodo() {\r\n        this.store.dispatch(new DeleteTodo(this.todo.id));\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}